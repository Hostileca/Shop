@rendermode InteractiveServer
<div class="position-fixed top-0 end-0 p-3" style="margin-top:60px">
    @if (MessageService.Message is not null)
    {
        switch (@MessageService.Message.Type)
        {
            case MessagesType.Error:
                BoxType = "alert-danger";
                break;
            case MessagesType.Success:
                BoxType = "alert-success";
                break;
            default:
                break;
        }
        <div class="alert @BoxType" role="alert" style="max-width: 300px;">
            <button type="button" class="btn-close float-end" aria-label="Close" @onclick="Close"></button>
            <p>@MessageService.Message.Info</p>
            <p>@MessageService.Message.Description</p>
        </div>
    }
</div>

@code{
    private string BoxType;
    protected override void OnInitialized()
    {
        MessageService.OnMessageRefresh += Refresh;
    }

    private void Refresh()
    {
        InvokeAsync(() => StateHasChanged());
    }

    private void Close(){
        MessageService.Message = null;
    }
}